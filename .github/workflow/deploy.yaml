name: Deploy Anomaly Detection Pipeline with VAE

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REPO_NAME: anomaly-detector
  LAMBDA_FUNCTION_NAME: anomaly-detector
  S3_BUCKET: anomaly-detection-models
  TF_WORKING_DIR: terraform

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $(aws ecr describe-repositories --query "repositories[?repositoryName=='$ECR_REPO_NAME'].repositoryUri" --output text)

      - name: Build Docker Image (VAE Model)
        run: docker build -t $ECR_REPO_NAME ./app

      - name: Tag and Push Image to ECR
        run: |
          ECR_URI=$(aws ecr describe-repositories --query "repositories[?repositoryName=='$ECR_REPO_NAME'].repositoryUri" --output text)
          docker tag $ECR_REPO_NAME:latest $ECR_URI:latest
          docker push $ECR_URI:latest

  deploy_lambda:
    name: Deploy Lambda Function
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update Lambda Function
        run: |
          ECR_URI=$(aws ecr describe-repositories --query "repositories[?repositoryName=='$ECR_REPO_NAME'].repositoryUri" --output text)
          aws lambda update-function-code --function-name $LAMBDA_FUNCTION_NAME --image-uri $ECR_URI:latest

  deploy_terraform:
    name: Apply Terraform Changes
    runs-on: ubuntu-latest
    needs: deploy_lambda

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.0

      - name: Initialize Terraform
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init

      - name: Apply Terraform Changes
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -auto-approve
